{"version":3,"sources":["features/about/About.tsx","app/layout/LoadingComponent.tsx","app/api/agent.ts","app/models/employee.ts","app/stores/store.ts","app/stores/employeeStore.ts","app/stores/modalStore.ts","app/stores/commonStore.ts","features/errors/NotFound.tsx","features/employee/employeeDetails/EmployeeDetailTable.tsx","features/employee/employeeDetails/EmployeeDetailComponent.tsx","features/appMessage/MessageComponent.tsx","features/employee/employeeList/EmployeeTable.tsx","features/employee/employeeList/SearchBar.tsx","features/employee/employeeList/SearchText.tsx","features/employee/employeeList/EmployeeListMain.tsx","app/form/CustomDateInput.tsx","app/form/CustomCheckBox.tsx","app/form/CustomTextInput.tsx","app/form/CustomSelectInput.tsx","features/employee/form/EmployeeForm.tsx","features/errors/ServerError.tsx","features/errors/ValidationErrors.tsx","features/errors/TestError.tsx","features/home/Home.tsx","app/common/modalContainer.tsx","app/layout/navbar/NavOptions.tsx","app/layout/navbar/DesktopNav.tsx","app/layout/navbar/MobileNav.tsx","app/layout/navbar/Navbar.tsx","app/layout/App.tsx","reportWebVitals.ts","index.tsx"],"names":["About","Segment","Header","size","className","observer","inverted","content","Dimmer","active","Loader","sleep","delay","Promise","resolve","setTimeout","axios","defaults","baseURL","process","interceptors","response","use","a","error","data","status","config","toast","method","errors","hasOwnProperty","history","push","window","location","reload","modalStateErrors","key","flat","store","commonStore","setServerError","reject","responseBody","requests","url","get","then","body","post","put","delete","agent","Emp","list","details","id","create","employee","update","Employee","emp","firstName","lastName","fullAddress","maillingAdress","email","phoneNumber","citizenshipStatus","employmentStartDate","Date","employmentType","position","emergencyContactName","emergencyContactRelationship","emergencyConteactPhoneNUmber","isSigned","this","employeeStore","employeeRegistry","selectedEmployee","undefined","loadingInitial","searchReslutText","loadEmployees","result","runInAction","console","log","searchEmployee","name","setSearchResultText","tempEmployeeRegistry","forEach","toLowerCase","search","length","setEmployeeRegistery","loadSelectedEmployee","createEmployee","updateEmployee","deleteEmployee","getEmployeeById","element","isMenuvisible","toggleMenuOption","makeAutoObservable","employees","text","modalStore","modal","open","openModal","closeModal","StoreContext","createContext","useStore","useContext","NotFound","placeholder","icon","Icon","Inline","Button","as","Link","to","secondary","textAlign","Table","padded","celled","selectable","Row","HeaderCell","colSpan","Body","Cell","collapsing","toString","split","useParams","useEffect","getSelectedEmployee","clearing","onClick","doc","jsPDF","elment","document","querySelector","html","callback","pdf","save","MessageComponent","messageType","message","confirm","textcolor","Message","loading","Content","style","color","toUpperCase","Modal","Actions","display","justifyContent","List","divided","animated","verticalAlign","getEmployeeRegistry","map","href","validationSchema","Yup","employeeName","required","initialValues","onSubmit","values","handleSubmit","isSubmitting","isValid","dirty","autoComplete","FormField","circular","link","type","render","Label","basic","MyDateInput","props","useField","field","meta","helpers","Form","Field","touched","selected","value","onChange","setValue","MyTextInput","checked","label","MySelectInput","Select","clearable","options","e","d","onBlur","setTouched","useHistory","useState","header","setHeader","setEmployee","max","matches","nullable","isTrue","enableReinitialize","actions","uuid","catch","setErrors","setSubmitting","sub","placeholderText","dateFormat","disabled","floated","positive","Container","marginTop","ValidationErrors","err","i","Item","baseUrl","primary","Home","vertical","onClose","NavOptions","hideMenuOption","NavLink","DestopNav","Menu","fixed","Navbar","App","hideProgressBar","exact","path","component","EmployeeListMain","EmployeeForm","EmployeeDetailComponent","TestErrors","ServerError","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createBrowserHistory","ReactDOM","Provider","getElementById"],"mappings":"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","file":"static/js/main.3782596f.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport { Header, Segment } from 'semantic-ui-react';\r\nexport default function About(){\r\n    return (\r\n        <Segment>\r\n            <Header  size='huge'>About this project</Header>\r\n            <Header className=\"sub-header\">Description</Header>\r\n            <p>\r\n                This project is a simple implementation of CURD (Create, Update, Read, Delete) operations. The main aim of this project \r\n                is to demonstrate skills on client side and server side programming. Basically, it is an exapmple of full stack applciation.\r\n                The stack has been applied as below:\r\n            </p>\r\n            <Header className='sub-header'>Tech Stack</Header>\r\n            <table className=\"tech-table\">\r\n                <tbody>\r\n                     <tr>\r\n                        <td>Front-end</td>\r\n                        <td>\r\n                            <ul>\r\n                                <li>React.js</li>\r\n                                <li>Typescript</li>\r\n                                <li>Sementic-ui-react: (Styling)</li>\r\n                                <li>Mobex: (Managing application state centrally)</li>\r\n                                <li>Axios: (Intercepter: To make HTTP request)</li>\r\n                                <li>react-router: (route the components in a single page application)</li>\r\n                                <li>Formik: (Form validation)</li>\r\n\r\n                            </ul>\r\n                        </td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                        <td>Back-end</td>\r\n                        <td>\r\n                            <ul>\r\n                                <li>ASP.NET CORE webapi</li>\r\n                                <li>CQRS + Mediatar design pattern</li>\r\n                                <li>SQL (In development)</li>\r\n                                <li>PostgreSQL (In production)</li>\r\n                                <li>Fluent Validation (Server-side validation)</li>\r\n                                <li>AutoMapper (mapping object)</li>\r\n\r\n                            </ul>\r\n                        </td>\r\n                    </tr>\r\n\r\n                </tbody>\r\n                \r\n            </table>\r\n            </Segment>\r\n    )\r\n}","import { observer } from 'mobx-react-lite';\r\nimport * as React from 'react';\r\nimport { Dimmer, Loader } from 'semantic-ui-react';\r\n\r\n\r\n\r\ninterface Props {\r\n    inverted?: boolean;\r\n    content?: string;\r\n}\r\n\r\nexport default observer( function LoadingComponent({inverted = true, content = 'Loading...'}: Props) {\r\n    return (\r\n        <Dimmer active={true} inverted={inverted}>\r\n            <Loader content={content} />\r\n        </Dimmer>\r\n    )\r\n})\r\n  ","import axios, { AxiosError, AxiosResponse } from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport { history } from '../..';\r\nimport { Employee } from \"../models/employee\";\r\nimport { store } from \"../stores/store\";\r\n\r\n//Artificial sleep\r\nconst sleep = (delay:number)=>{\r\n    return new Promise((resolve)=>{\r\n        setTimeout( resolve, delay);\r\n    })\r\n}\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\r\n\r\naxios.interceptors.response.use(async response => {\r\n    // if (process.env.NODE_ENV === 'development') \r\n    await sleep(1000);\r\n    return response;\r\n}, (error: AxiosError) => {\r\n    const { data, status, config } = error.response!;\r\n    switch (status) {\r\n        case 400:\r\n            //bad request\r\n            if(typeof data === \"string\"){\r\n                toast.error(data);\r\n            }\r\n            //not a guid\r\n           if (config.method === 'get' && data.errors.hasOwnProperty('id')) {\r\n                history.push('/not-found');\r\n                window.location.reload();\r\n            }\r\n            //validation error\r\n            if (data.errors) {\r\n                const modalStateErrors = [];\r\n                for (const key in data.errors) {\r\n                    if (data.errors[key]) {\r\n                        modalStateErrors.push(data.errors[key])\r\n                    }\r\n                }\r\n                throw modalStateErrors.flat();\r\n            } \r\n\r\n            break;\r\n        case 401:\r\n            toast.error('Unauthorized');\r\n            break;\r\n\r\n       \r\n        case 404:    \r\n            history.push('/not-found');\r\n             window.location.reload();\r\n            break;\r\n        \r\n        case 500:\r\n         \r\n            store.commonStore.setServerError(data);\r\n            break;\r\n       \r\n    }\r\n    return Promise.reject(error);\r\n})\r\n\r\nconst responseBody = <T>(response: AxiosResponse<T>) => response.data;\r\nconst requests = {\r\n    get:<T>(url:string)=> axios.get<T>(url).then(responseBody),\r\n    post:<T>(url:string, body:{})=> axios.post<T> (url, body).then(responseBody),\r\n    put: <T>(url:string, body:{})=> axios.put<T>(url, body).then(responseBody),\r\n    del:<T>(url:string) => axios.delete<T>(url).then(responseBody)\r\n}\r\n\r\nconst Emp = {\r\n    list: () => axios.get<Employee[]>('/employee').then(responseBody),\r\n    details: (id: string)=> requests.get<Employee>(`/employee/${id}`),\r\n    create: (employee: {}) => requests.post<void>('/employee', employee),\r\n    update:(employee:{})=> requests.put<void>('/employee', employee ),\r\n    delete:(id:string) => requests.del<void>(`/employee/${id}`)\r\n}\r\n\r\nconst agent ={Emp}\r\nexport default agent;","\r\nexport interface Employee{\r\n       id: string;\r\n        firstName: string;\r\n        lastName: string;\r\n        fullAddress: string;\r\n        maillingAdress: string;\r\n        email: string;\r\n        phoneNumber: string;\r\n        citizenshipStatus: string;\r\n        employmentStartDate: Date;\r\n        employmentType: string;\r\n        position: string;\r\n        emergencyContactName: string;\r\n        emergencyContactRelationship: string;\r\n        emergencyConteactPhoneNUmber: string;\r\n        isSigned: boolean;\r\n}\r\n\r\nexport class Employee implements Employee{\r\n        id = '';\r\n        firstName = \"\";\r\n        lastName = \"\";\r\n        fullAddress = \"\";\r\n        maillingAdress = \"\";\r\n        email = \"\";\r\n        phoneNumber = \"\";\r\n        citizenshipStatus = \"\";\r\n        employmentStartDate = new Date();\r\n        employmentType = \"\";\r\n        position = \"\";\r\n        emergencyContactName = \"\";\r\n        emergencyContactRelationship = \"\";\r\n        emergencyConteactPhoneNUmber = \"\";\r\n        isSigned = false;\r\n\r\n        constructor(emp?:Employee){\r\n                if(emp){\r\n                        this.id = emp.id;\r\n                        this.firstName = emp.firstName\r\n                        this.lastName = emp.lastName;\r\n                        this.fullAddress = emp.fullAddress;\r\n                        this.maillingAdress = emp.maillingAdress;\r\n                        this.email = emp.email;\r\n                        this.phoneNumber = emp.phoneNumber;\r\n                        this.citizenshipStatus = emp.citizenshipStatus;\r\n                        this.employmentStartDate = new Date( emp.employmentStartDate);\r\n                        this.employmentType = emp.employmentType;\r\n                        this.position = emp.position;\r\n                        this.emergencyContactName = emp.emergencyContactName;\r\n                        this.emergencyContactRelationship = emp.emergencyContactRelationship;\r\n                        this.emergencyConteactPhoneNUmber = emp.emergencyConteactPhoneNUmber;\r\n                        this.isSigned = emp.isSigned;\r\n                }\r\n                \r\n\r\n        }\r\n        \r\n}\r\n\r\n","import { createContext, useContext } from \"react\";\r\nimport CommonStore from \"./commonStore\";\r\nimport EmployeeStroe from \"./employeeStore\";\r\nimport ModalStore from \"./modalStore\";\r\n\r\n\r\ninterface Store {\r\n    employeeStore: EmployeeStroe;\r\n    modalStore: ModalStore;\r\n    commonStore: CommonStore;\r\n}\r\n\r\nexport const store:Store = {\r\n    employeeStore: new EmployeeStroe(),\r\n    modalStore: new ModalStore(),\r\n    commonStore: new CommonStore()\r\n}\r\n\r\nexport const StoreContext = createContext(store);\r\n\r\nexport function useStore(){\r\n    return useContext(StoreContext);\r\n}","import { makeAutoObservable, runInAction } from \"mobx\";\r\nimport agent from \"../api/agent\";\r\nimport { Employee } from \"../models/employee\";\r\n\r\n\r\nexport default class EmployeeStroe{\r\n\r\n    employeeRegistry:Employee[] = [];\r\n    selectedEmployee:Employee|undefined= undefined;\r\n    loadingInitial = false;\r\n    searchReslutText:string|undefined = undefined;\r\n    constructor(){\r\n        makeAutoObservable(this);\r\n    }\r\n\r\n\r\n    loadEmployees = async ()=> {\r\n\r\n        this.loadingInitial = true;\r\n        try{\r\n           const result = await agent.Emp.list();\r\n            this.employeeRegistry = result;\r\n            runInAction(()=>{\r\n                    this.loadingInitial= false;    \r\n            })\r\n        }\r\n        catch (error)\r\n        {\r\n            console.log(error);\r\n            runInAction(()=> this.loadingInitial=false);\r\n        }\r\n    }\r\n\r\n    get getEmployeeRegistry (){\r\n        return this.employeeRegistry;\r\n    }\r\n     setEmployeeRegistery(employees:Employee[]){\r\n         this.employeeRegistry = [];\r\n        this.employeeRegistry = employees;\r\n    }\r\n    setSearchResultText(text:string|undefined){\r\n        this.searchReslutText = text;\r\n    }\r\n\r\n    searchEmployee = async (name:string)=>{\r\n       try{\r\n            await agent.Emp.list().then(response =>{\r\n                runInAction(()=>{\r\n                    this.employeeRegistry = response;\r\n                    this.loadingInitial= false;\r\n                \r\n                })\r\n            })\r\n        }\r\n        catch (error)\r\n        {\r\n            console.log(error);\r\n            runInAction(()=> this.loadingInitial=false);\r\n        }\r\n        this.setSearchResultText(undefined);\r\n       let tempEmployeeRegistry: Employee[] = [];\r\n       this.employeeRegistry.forEach(emp => {\r\n           const empName = emp.firstName + \" \"+ emp.lastName;\r\n           const serchResult = empName.toLowerCase().search(name.toLowerCase());\r\n           if(serchResult >= 0){\r\n               tempEmployeeRegistry.push(emp);\r\n           }\r\n       });\r\n       if(tempEmployeeRegistry.length > 0){\r\n        this.setEmployeeRegistery(tempEmployeeRegistry);\r\n       }\r\n       else{\r\n           this.setSearchResultText(\"No emplyee Found by the given name. \" );\r\n       \r\n        }\r\n       \r\n    }\r\n\r\n    loadSelectedEmployee = async(id:string) =>{\r\n        this.loadingInitial = true;\r\n        runInAction(()=> this.selectedEmployee = undefined);\r\n        try{\r\n            await agent.Emp.details(id).then(response =>{\r\n                runInAction(()=>{\r\n                    this.selectedEmployee = response;\r\n                    this.loadingInitial= false;\r\n                });\r\n            });\r\n\r\n        }\r\n        catch(error){\r\n            runInAction(()=>{\r\n                this.loadingInitial = false;\r\n                console.log(error);\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    get getSelectedEmployee (){\r\n        return this.selectedEmployee;\r\n    }\r\n\r\n\r\n     createEmployee = async (emp:Employee) => {\r\n        try {\r\n            await agent.Emp.create(emp);\r\n            runInAction(() => {\r\n                this.selectedEmployee = emp;\r\n            })\r\n        } catch (error) {\r\n            throw error;\r\n        }\r\n    }\r\n     updateEmployee = async (emp:Employee) => {\r\n        try {\r\n            await agent.Emp.update(emp);\r\n            runInAction(() => {\r\n                this.selectedEmployee = emp;\r\n            });\r\n           \r\n        } catch (error) {\r\n             throw error;\r\n        }\r\n    }\r\n\r\n    deleteEmployee = async (id: string) => {\r\n        this.loadingInitial = true;\r\n        try {\r\n            await agent.Emp.delete(id).then(()=>{\r\n                  runInAction(() => {\r\n                      this.loadEmployees();\r\n                    this.loadingInitial = false;\r\n                })\r\n            });\r\n         \r\n        } catch (error) {\r\n            console.log(error);\r\n            runInAction(() => {\r\n                this.loadingInitial = false;\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n\r\n    getEmployeeById = (id:string)=>{\r\n        this.employeeRegistry.forEach(element => {\r\n            if(element.id === id){\r\n                return Employee;\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n\r\n    /*--------------------------------------*/\r\n    /* html rendering--------------------------------------*/\r\n    /*--------------------------------------*/\r\n\r\n    isMenuvisible = false;\r\n\r\n    toggleMenuOption =()=>{\r\n     \r\n        this.isMenuvisible = !this.isMenuvisible;\r\n     \r\n    }\r\n    \r\n}","import { makeAutoObservable } from \"mobx\"\r\n\r\ninterface Modal {\r\n    open: boolean;\r\n    body: JSX.Element | null;\r\n}\r\n\r\nexport default class ModalStore {\r\n    modal: Modal = {\r\n        open: false,\r\n        body: null\r\n    }\r\n\r\n    constructor() {\r\n        makeAutoObservable(this)\r\n    }\r\n\r\n    openModal = (content: JSX.Element) => {\r\n        this.modal.open = true;\r\n        this.modal.body = content;\r\n    }\r\n\r\n    closeModal = () => {\r\n        this.modal.open = false;\r\n        this.modal.body = null;\r\n    }\r\n}","import { makeAutoObservable } from \"mobx\";\r\nimport { ServerError } from \"../models/serverError\";\r\n\r\nexport default class CommonStore {\r\n    error: ServerError | null = null;\r\n    \r\n\r\n    constructor() {\r\n        makeAutoObservable(this);\r\n    }\r\n    \r\n    setServerError = (error: ServerError) => {\r\n        this.error = error;\r\n    }\r\n}","import { Link } from 'react-router-dom';\r\nimport { Button, Header, Icon, Segment } from 'semantic-ui-react';\r\n\r\nexport default function NotFound() {\r\n    \r\n    return (\r\n        <Segment placeholder>\r\n            <Header icon>\r\n                <Icon name='search' />\r\n                Oops - we've looked everywhere and could not find this.\r\n            </Header>\r\n            <Segment.Inline>\r\n                <Button as={Link} to='/employees' secondary>\r\n                    Return to Employee List\r\n                </Button>\r\n            </Segment.Inline>\r\n        </Segment>\r\n    )\r\n}","import { observer } from 'mobx-react-lite';\r\nimport * as React from 'react';\r\nimport { Header, Icon, Table } from 'semantic-ui-react';\r\nimport { Employee } from '../../../app/models/employee';\r\n\r\ninterface Props{\r\n    selectedEmployee?:Employee\r\n}\r\n\r\nexport default observer(function EmployeeDetailTable({selectedEmployee}:Props){\r\n    return(\r\n        <>\r\n            <Header className=\"detail-header\" textAlign='center' size='huge'  > <Icon name='user' /> Employee Details</Header>\r\n\r\n            <Table padded celled inverted selectable>\r\n                <Table.Header>\r\n                    <Table.Row>\r\n                        <Table.HeaderCell className=\"table-header\" textAlign='center'  colSpan=\"2\">Employee Credentials</Table.HeaderCell>\r\n                    </Table.Row>\r\n                </Table.Header>\r\n                <Table.Body>\r\n                    <Table.Row>\r\n                            <Table.Cell collapsing>Employee Name</Table.Cell>\r\n                            <Table.Cell>{selectedEmployee?.firstName + \" \" + selectedEmployee?.lastName}</Table.Cell>\r\n                    </Table.Row>\r\n                    <Table.Row>\r\n                            <Table.Cell collapsing>Address</Table.Cell>\r\n                            <Table.Cell>{selectedEmployee?.fullAddress}</Table.Cell>\r\n                    </Table.Row>\r\n                    <Table.Row>\r\n                            <Table.Cell collapsing>Mailing Address</Table.Cell>\r\n                            <Table.Cell>{selectedEmployee?.maillingAdress}</Table.Cell>\r\n                    </Table.Row>\r\n                    <Table.Row>\r\n                            <Table.Cell collapsing>Email</Table.Cell>\r\n                            <Table.Cell>{selectedEmployee?.email}</Table.Cell>\r\n                    </Table.Row>\r\n                    <Table.Row>\r\n                            <Table.Cell collapsing>Phone Number</Table.Cell>\r\n                            <Table.Cell>{selectedEmployee?.phoneNumber}</Table.Cell>\r\n                    </Table.Row>\r\n                        <Table.Row>\r\n                            <Table.Cell collapsing>Citizenship Status</Table.Cell>\r\n                            <Table.Cell>{selectedEmployee?.citizenshipStatus}</Table.Cell>\r\n                    </Table.Row>\r\n                        <Table.Row>\r\n                            <Table.Cell collapsing>Employment Type</Table.Cell>\r\n                            <Table.Cell>{selectedEmployee?.employmentType}</Table.Cell>\r\n                    </Table.Row>\r\n                        <Table.Row>\r\n                            <Table.Cell collapsing>Employment start date</Table.Cell>\r\n                            <Table.Cell>{selectedEmployee?.employmentStartDate.toString().split('T')[0]}</Table.Cell>\r\n                    </Table.Row> \r\n                        <Table.Row>\r\n                            <Table.Cell collapsing>Position</Table.Cell>\r\n                            <Table.Cell>{selectedEmployee?.position}</Table.Cell>\r\n                    </Table.Row>\r\n                        <Table.Row>\r\n                        <Table.HeaderCell className ='table-header' textAlign='center'  colSpan=\"2\">Emergency Contact</Table.HeaderCell>\r\n                    </Table.Row> \r\n                        <Table.Row>\r\n                            <Table.Cell collapsing>Name</Table.Cell>\r\n                            <Table.Cell>{selectedEmployee?.emergencyContactName}</Table.Cell>\r\n                    </Table.Row>\r\n                        <Table.Row>\r\n                            <Table.Cell collapsing>Relationship</Table.Cell>\r\n                            <Table.Cell>{selectedEmployee?.emergencyContactRelationship}</Table.Cell>\r\n                    </Table.Row>\r\n                        <Table.Row>\r\n                            <Table.Cell collapsing>Phone Number</Table.Cell>\r\n                            <Table.Cell>{selectedEmployee?.emergencyConteactPhoneNUmber}</Table.Cell>\r\n                    </Table.Row>\r\n                        <Table.Row>\r\n                        <Table.HeaderCell className='table-header' textAlign='center'  colSpan=\"2\">Signature</Table.HeaderCell>\r\n                    </Table.Row> \r\n                        <Table.Row>\r\n                            <Table.Cell collapsing>Signature</Table.Cell>\r\n                            <Table.Cell>{selectedEmployee?.isSigned? \"Digitally signed by acceptiing 'terms and condition'.\": \"Not Signed\"}</Table.Cell>\r\n                    </Table.Row>\r\n\r\n                </Table.Body>\r\n            </Table>\r\n        </>\r\n    )\r\n})","import jsPDF from 'jspdf';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { useEffect } from 'react';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { Button, Header, Icon, Segment } from 'semantic-ui-react';\r\nimport LoadingComponent from '../../../app/layout/LoadingComponent';\r\nimport { useStore } from '../../../app/stores/store';\r\nimport NotFound from '../../errors/NotFound';\r\nimport EmployeeDetailTable from './EmployeeDetailTable';\r\n\r\n\r\nexport default observer( function EmployeeDetailComponent(){\r\n    const {employeeStore} = useStore();\r\n    const {selectedEmployee}= employeeStore;\r\n    const{id} = useParams<{id:string}>();\r\n\r\n    useEffect(()=>{\r\n        if(id){\r\n         \r\n            employeeStore.loadSelectedEmployee(id);     \r\n        }\r\n           \r\n\r\n    },[employeeStore, id])\r\n\r\n    function generatePdf (){\r\n        var doc = new jsPDF(\"p\", \"pt\", \"a4\");\r\n        const elment:HTMLElement|null = document.querySelector(\"#copiedToPdf\");\r\n        if(elment){\r\n            doc.html(elment, {\r\n                        callback: function(pdf){\r\n                            pdf.save(selectedEmployee?.firstName + \".pdf\");\r\n                        }\r\n                    });\r\n        }\r\n       \r\n    }\r\n\r\n    return(\r\n        <>\r\n        {employeeStore.loadingInitial? (<LoadingComponent/>):\r\n        (employeeStore.getSelectedEmployee?.id === undefined? (<NotFound/>):(\r\n            <>\r\n            <Segment  clearing>\r\n                        <EmployeeDetailTable selectedEmployee={selectedEmployee}/>\r\n                    \r\n                    <div className='employee-control'>\r\n                             <Button className=\"delete-button\" as={Link} to={`/edit/${selectedEmployee?.id}`}\r\n                               \r\n                             > Edit Details </Button>\r\n                            <Button className=\"view-button\" onClick={generatePdf}> Download details as PDF</Button>\r\n                           \r\n                        </div>\r\n            </Segment>\r\n              <div id= \"pdf\">\r\n                <div id=\"copiedToPdf\" >\r\n            <Header className=\"detail-header\" textAlign='center' size='huge'  > <Icon name='user' /> Employee Details</Header>\r\n\r\n                <div className = 'row'>\r\n                    <div className = \"row-header\">Employee Credentials</div>\r\n                </div>\r\n                <div className='row'>\r\n                    <div className='level'>Employee Name</div>\r\n                    <div className='level-value'>{selectedEmployee?.firstName + \" \"+ selectedEmployee?.lastName}</div>\r\n                </div>\r\n                <div className='row'>\r\n                    <div className='level'>Full Address</div>\r\n                    <div className='level-value'>{selectedEmployee?.fullAddress}</div>\r\n                </div>\r\n                <div className='row'>\r\n                    <div className='level'>Mailling Address</div>\r\n                    <div className='level-value'>{selectedEmployee?.maillingAdress}</div>\r\n                </div>\r\n                <div className='row'>\r\n                    <div className='level'>Email</div>\r\n                    <div className='level-value'>{selectedEmployee?.email}</div>\r\n                </div>\r\n                <div className='row'>\r\n                    <div className='level'> Phone number</div>\r\n                    <div className='level-value'>{selectedEmployee?.phoneNumber}</div>\r\n                </div>\r\n                <div className='row'>\r\n                    <div className='level'>Citizenship Stauts</div>\r\n                    <div className='level-value'>{selectedEmployee?.citizenshipStatus}</div>\r\n                </div>\r\n                <div className='row'>\r\n                    <div className='level'>Employment Type</div>\r\n                    <div className='level-value'>{selectedEmployee?.employmentType}</div>\r\n                </div>\r\n                <div className='row'>\r\n                    <div className='level'>Employment Start Date</div>\r\n                    <div className='level-value'>{selectedEmployee?.employmentStartDate.toString().split('T')[0]}</div>\r\n                </div>\r\n                <div className='row'>\r\n                    <div className='level'>Position</div>\r\n                    <div className='level-value'>{selectedEmployee?.position}</div>\r\n                </div>\r\n                 <div className = 'row'>\r\n                    <div className = \"row-header\">Emergency Contact</div>\r\n                </div>\r\n                <div className='row'>\r\n                    <div className='level'> Name</div>\r\n                    <div className='level-value'>{selectedEmployee?.emergencyContactName}</div>\r\n                </div>\r\n                <div className='row'>\r\n                    <div className='level'>Relationship</div>\r\n                    <div className='level-value'>{selectedEmployee?.emergencyContactRelationship}</div>\r\n                </div>\r\n                <div className='row'>\r\n                    <div className='level'>Contact</div>\r\n                    <div className='level-value'>{selectedEmployee?.emergencyConteactPhoneNUmber}</div>\r\n                </div>\r\n                 <div className = 'row'>\r\n                    <div className = \"row-header\">Signature</div>\r\n                </div>\r\n                <div className='row'>\r\n                    <div className='level'>Signature</div>\r\n                    <div className='level-value'>{selectedEmployee?.isSigned? \"Digitally signed by acceptiing 'terms and condition'.\": \"Not Signed\"}</div>\r\n                </div>\r\n                        \r\n                </div> \r\n            </div>\r\n            </>\r\n\r\n        ))}\r\n        </>\r\n    );\r\n})","import { Button, Icon, Message, Modal } from 'semantic-ui-react';\r\nimport { useStore } from '../../app/stores/store';\r\n\r\ninterface Props{\r\n    messageType:string,\r\n    message:string,\r\n    confirm: ()=> void\r\n    \r\n\r\n}\r\n\r\nexport default function MessageComponent({  messageType, message, confirm}:Props){\r\n    const{modalStore}=useStore();\r\n   \r\n\r\n\r\n    const textcolor = messageType === \"warning\"? \"red\": \"green\";\r\n    return(\r\n        <>\r\n        <Message icon>\r\n            <Icon name='circle notched' loading />\r\n            <Message.Content>\r\n                <Message.Header  as='h2' style= {{color: textcolor}}  >{messageType.toUpperCase()} </Message.Header>\r\n                {message}\r\n            </Message.Content>\r\n        </Message>\r\n\r\n        <Modal.Actions style= {{display:\"flex\", justifyContent: \"flex-end\"}}>\r\n            <Button  color={textcolor} onClick={ confirm}  >Confirm</Button>\r\n            <Button  color='grey' onClick={() => modalStore.closeModal()}> Cancel </Button>\r\n        </Modal.Actions>\r\n        \r\n        </>\r\n\r\n    )\r\n}","import { observer } from 'mobx-react-lite';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, List } from 'semantic-ui-react';\r\nimport { useStore } from '../../../app/stores/store';\r\nimport MessageComponent from '../../appMessage/MessageComponent';\r\n\r\nexport default observer( function EmployeeTable(){\r\n    const{employeeStore, modalStore}= useStore();\r\n\r\n    function handleDelete(id:string){\r\n        employeeStore.deleteEmployee(id).then(()=>{\r\n            modalStore.closeModal();\r\n        });\r\n        \r\n    }\r\n    return (\r\n    \r\n        <List divided animated verticalAlign= 'middle' >\r\n            {\r\n                employeeStore.getEmployeeRegistry.map(employee =>(\r\n                    <div key={ employee.id} className='employee-item'>\r\n                        <div className=\"employee-info\">\r\n                            <div className=\"employee-icon\">\r\n                                <i className='user icon'></i>\r\n                            </div>\r\n                            <div className=\"employee-details\">\r\n                                    <div className=\"info\">Name    : {employee.firstName + \" \"+ employee.lastName}</div>\r\n                                    <div className=\"info\">Position: {employee.position}</div>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                        <div className='employee-control'>\r\n                             <Button className=\"delete-button\" \r\n                                onClick={()=> modalStore.openModal(\r\n                                <MessageComponent \r\n                                    messageType ='warning'\r\n                                    message = {`Do you really want to delete employee named \" ${employee.firstName + \" \"+ employee.lastName}\" ?`}\r\n                                    confirm = {()=> handleDelete(employee.id)}\r\n                                />)}\r\n                             > Delete </Button>\r\n                            <Button className=\"view-button\"  as={Link} to={`/details/${employee.id}`}> More <span>Details</span></Button>\r\n                           \r\n                        </div>\r\n                    </div>\r\n                ))\r\n            }\r\n            <div className=\"reload\"><Button href='#' onClick={()=>window.location.reload()}>Reload Employee</Button></div>\r\n        </List>\r\n\r\n    );\r\n})","import { ErrorMessage, Field, Form, Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport * as React from 'react';\r\nimport { FormField, Icon, Label } from 'semantic-ui-react';\r\nimport { useStore } from '../../../app/stores/store';\r\nimport { observer } from 'mobx-react-lite';\r\n\r\nexport default observer (function SearchBar(){\r\n    const{employeeStore} = useStore();\r\n   const validationSchema = Yup.object({\r\n        employeeName:Yup.string().required(\"please input Employee name.\")\r\n    });\r\n    return(\r\n        <Formik\r\n            initialValues = {{employeeName: ''}}\r\n            validationSchema = {validationSchema}\r\n            onSubmit= {(values)=>employeeStore.searchEmployee(values.employeeName) }\r\n        >\r\n              {({handleSubmit, isSubmitting, isValid, dirty})=>(\r\n\r\n                <Form onSubmit={handleSubmit} autoComplete = \"off\" >\r\n                    <FormField className=\"search-box\">\r\n                         <Field  name=\"employeeName\" className= \"search-input\" placeholder='Search By Employee Name'/>\r\n                         <Icon className=\"search-box-icon\" name='search'  circular link onClick={handleSubmit}  type='submit'/>\r\n                    </FormField>\r\n                   \r\n                     <ErrorMessage\r\n                            name = \"employeeName\"\r\n                            render= {error => <Label basic color='red' content= {error}/>}\r\n                          />\r\n                </Form>\r\n            )}\r\n\r\n        </Formik>\r\n    )\r\n});","import { observer } from 'mobx-react-lite';\r\nimport * as React from 'react';\r\nimport { useStore } from '../../../app/stores/store';\r\n\r\nexport default observer(function SearchText(){\r\n    const {employeeStore} = useStore();\r\n    return(\r\n        <div className= \"search-text\">\r\n            { employeeStore.searchReslutText?(<div>{employeeStore.searchReslutText}</div>):void(0)}\r\n        </div>\r\n    )\r\n})","import { observer } from 'mobx-react-lite';\r\nimport * as React from 'react';\r\nimport { useEffect } from 'react';\r\nimport { Segment } from 'semantic-ui-react';\r\nimport LoadingComponent from '../../../app/layout/LoadingComponent';\r\nimport { useStore } from '../../../app/stores/store';\r\nimport EmployeeTable from './EmployeeTable';\r\nimport SearchBar from './SearchBar';\r\nimport SearchText from './SearchText';\r\n\r\nexport default observer( function EmployeeListMain(){\r\n\r\n    const{employeeStore}= useStore();\r\n    useEffect(()=>{\r\n        employeeStore.setEmployeeRegistery([]);\r\n        employeeStore.loadEmployees();\r\n    }, [employeeStore])\r\n\r\n    return (\r\n        <>\r\n            {employeeStore.loadingInitial ?(<LoadingComponent/>):\r\n            (\r\n                <Segment>\r\n                    <SearchBar></SearchBar>\r\n                    <SearchText></SearchText>\r\n                    <EmployeeTable></EmployeeTable>\r\n                </Segment>\r\n            )}\r\n            \r\n        </>\r\n    )\r\n})","import { useField } from 'formik';\r\nimport React from 'react';\r\nimport { Form, Label } from 'semantic-ui-react';\r\nimport DatePicker, {ReactDatePickerProps} from 'react-datepicker';\r\n\r\n\r\n\r\nexport default function MyDateInput(props: Partial<ReactDatePickerProps>) {\r\n    const [field, meta, helpers] = useField(props.name!); \r\n    return (\r\n        <Form.Field error={meta.touched && !!meta.error}>\r\n            <label>Employment Start Date</label>\r\n            <DatePicker \r\n                {...field}\r\n                {...props}\r\n                selected={(field.value && new Date(field.value)) || null}\r\n                onChange={value => helpers.setValue(value)}\r\n            />\r\n            {meta.touched && meta.error ? (\r\n                <Label basic color='red'>{meta.error}</Label>\r\n            ) : null}\r\n        </Form.Field>\r\n    )\r\n}","import { useField } from 'formik';\r\nimport React from 'react';\r\nimport { Form, Label } from 'semantic-ui-react';\r\n\r\ninterface Props {\r\n    placeholder: string;\r\n    name: string;\r\n    type?: string;\r\n    label?: string;\r\n}\r\n\r\nexport default function MyTextInput(props: Props) {\r\n    const [field, meta] = useField(props.name); \r\n    return (\r\n        <Form.Field error={meta.touched && !!meta.error}>\r\n           <div className=\"ckeckbox-align\">\r\n                <input  {...field} {...props} checked = {field.value} />\r\n                <label>{props.label}</label>\r\n           </div>\r\n            \r\n            {meta.touched && meta.error ? (\r\n                <Label basic color='red'>{meta.error}</Label>\r\n            ) : null}\r\n\r\n           \r\n        </Form.Field>\r\n    )\r\n}","import { useField } from 'formik';\r\nimport React from 'react';\r\nimport { Form, Label } from 'semantic-ui-react';\r\n\r\ninterface Props {\r\n    placeholder: string;\r\n    name: string;\r\n    type?: string;\r\n    label?: string;\r\n}\r\n\r\nexport default function MyTextInput(props: Props) {\r\n    const [field, meta] = useField(props.name); \r\n    return (\r\n        <Form.Field error={meta.touched && !!meta.error}>\r\n            <label>{props.label}</label>\r\n            <input {...field} {...props} />\r\n            {meta.touched && meta.error ? (\r\n                <Label basic color='red'>{meta.error}</Label>\r\n            ) : null}\r\n        </Form.Field>\r\n    )\r\n}\r\n","\r\nimport { useField } from 'formik';\r\nimport React from 'react';\r\nimport { Form, Label, Select } from 'semantic-ui-react';\r\n\r\ninterface Props {\r\n    placeholder: string;\r\n    name: string;\r\n    options: any;\r\n    label?: string;\r\n}\r\n\r\nexport default function MySelectInput(props: Props) {\r\n    const [field, meta, helpers] = useField(props.name); \r\n    return (\r\n        <Form.Field error={meta.touched && !!meta.error}>\r\n            <label>{props.label}</label>\r\n            <Select \r\n                clearable\r\n                options={props.options}\r\n                value={field.value || null}\r\n                onChange={(e, d) => helpers.setValue(d.value)}\r\n                onBlur={() => helpers.setTouched(true)}\r\n                placeholder={props.placeholder}\r\n            />\r\n            {meta.touched && meta.error ? (\r\n                <Label basic color='red'>{meta.error}</Label>\r\n            ) : null}\r\n        </Form.Field>\r\n    )\r\n}","import { Formik } from 'formik';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { Button, Form, Header, Icon, Segment } from 'semantic-ui-react';\r\nimport { Employee } from '../../../app/models/employee';\r\nimport { useStore } from '../../../app/stores/store';\r\nimport * as Yup from \"yup\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport CustomDateInput from '../../../app/form/CustomDateInput';\r\nimport CustomCheckBox from '../../../app/form/CustomCheckBox';\r\nimport CustomTextInput from '../../../app/form/CustomTextInput';\r\nimport CustomSelectInput from '../../../app/form/CustomSelectInput';\r\nimport {v4 as uuid} from \"uuid\";\r\n\r\nexport default observer(function EmployeeForm(){\r\n    const history = useHistory();\r\n    const [header, setHeader] = useState<string>(\"New Employee\");\r\n    const[employee, setEmployee] = useState<Employee>(new Employee());\r\n    const{id} =useParams<{id:string}>();\r\n    const {employeeStore} = useStore();\r\n     const employmentType = [\r\n        {text: 'Fulltime', value: 'Fulltime'},\r\n        {text: 'Parttime', value: 'Parttime'},\r\n        {text: 'Casual', value: 'Casual'},\r\n        \r\n    ]\r\n\r\n    const validationSchema = Yup.object({\r\n        \r\n        firstName: Yup.string().max(50, \"First name should be below 50 characters\")\r\n            .required(\"Please input first name.\"),\r\n        lastName: Yup.string().max(50, \"Last name should be below 50 characters\")\r\n            .required(\"Please input last name.\"),\r\n        fullAddress: Yup.string().required(\"please input full Address.\").max(250, \"Full address should be below 250 characters\"),\r\n        maillingAdress: Yup.string().required(\"please input mailling Address.\").max(250, \"Mailing address should be below 250 characters\"),\r\n        email: Yup.string().email().required(\"Please input your email address\"),\r\n        phoneNumber: Yup.string().required(\"Please input your phone number\")\r\n            .matches(/^(\\+[0-9]{2,}[0-9]{4,}[0-9]*)(x?[0-9]{1,})?$/, \"Please input a valid phone number (+xxxxxxxxxxxxx)\"),\r\n        citizenshipStatus : Yup.string().max (50, \"CitizenShip Status shoulc be below 50 characters\")\r\n            .required(\"Pleasse input your citizenship status\"),\r\n        employmentStartDate: Yup.date().required(\"Please input employment start Date\").nullable(),\r\n        employmentType: Yup.string().required(\"Please select employment type\"),\r\n        position: Yup.string().required(\"Please input position\").max(50, \"Position should be below 50 characters\"),\r\n        emergencyContactName: Yup.string().required(\"Please input emergency contact Name\")\r\n            .max(50, \"Emergency contact name should be below 50 characters.\"),\r\n        emergencyContactRelationship:Yup.string().required(\"Please input relationship with emergency contact \")\r\n            .max(50, \"Emergency contact relationship should be below 50 characters.\"),\r\n        emergencyConteactPhoneNUmber: Yup.string().required(\"Please input your phone number\")\r\n            .matches(/^(\\+[0-9]{2,}[0-9]{4,}[0-9]*)(x?[0-9]{1,})?$/, \"Please input a valid phone number (+xxxxxxxxxxxxx)\"),\r\n        isSigned: Yup.boolean().isTrue(\"You need to accept terms and conditions\").required( \"You need to accept terms and conditions\")\r\n        \r\n    });\r\n\r\n \r\n\r\n    useEffect( ()=>{\r\n        if(id){\r\n             employeeStore.loadSelectedEmployee(id).then(() => setEmployee(new Employee(employeeStore.getSelectedEmployee)));\r\n            setHeader(\"Edit Details\")\r\n        }\r\n         \r\n    }, [employeeStore, id])\r\n\r\n    // function handleFormSubmit(emp:Employee) {\r\n    //     if (emp.id === '') {\r\n    //         emp.id = uuid();\r\n    //         employeeStore.createEmployee(emp).then(()=> {\r\n    //             history.push(`/details/${emp.id}`);\r\n    //         });\r\n    //     } else {\r\n        \r\n    //        employeeStore.updateEmployee(emp).then(()=>{\r\n            \r\n    //         history.push(`/details/${emp.id}`)\r\n            \r\n    //         });;\r\n    //     }\r\n       \r\n    // }\r\n   \r\n\r\n    return(\r\n        <Segment clearing>\r\n        <Header className=\"detail-header\" textAlign='center' size='huge'  > <Icon name='user' /> {header}</Header>\r\n\r\n            <Formik\r\n                validationSchema = {validationSchema}\r\n                enableReinitialize = {true}\r\n                initialValues = {employee}\r\n            \r\n                \r\n            \r\n                onSubmit = {async (values, actions)=> {\r\n                    \r\n                     if (values.id === '') {\r\n                         values.id = uuid();\r\n                         await  employeeStore.createEmployee(values)\r\n                        .then(()=> {\r\n                          history.push(`/details/${values.id}`);\r\n                        })\r\n                         .catch(error=>{\r\n                            values.id = '';\r\n                            actions.setErrors({email: error.response.data});\r\n                            actions.setSubmitting(false);\r\n                        });\r\n                    } else {\r\n                    \r\n                        await employeeStore.updateEmployee(values)\r\n                       .then(()=>{ \r\n                          history.push(`/details/${values.id}`)\r\n                         }) \r\n                         .catch(error=>{\r\n                            actions.setErrors({email: error.response.data});\r\n                            actions.setSubmitting(false);\r\n                        });\r\n                    }\r\n                    \r\n                }}\r\n            >\r\n                {({handleSubmit, isValid, isSubmitting, errors, dirty})=>(\r\n\r\n                    <Form\r\n                     className='ui form' \r\n                     onSubmit={handleSubmit}  \r\n                     autoComplete='off'\r\n                    >\r\n                        <Header size='huge' content = \"Employee info\" sub color=\"teal\"/>\r\n                      \r\n                         <CustomTextInput placeholder=\"FirstName\" name = \"firstName\"  label=\"First Name\"/>\r\n                        <CustomTextInput placeholder=\"Last name\" name = \"lastName\" label= \"Last Name\"/>\r\n                        <CustomTextInput  placeholder=\"Full Address\" name = \"fullAddress\" label= \"Full Address\"/>\r\n                        <CustomTextInput  placeholder=\"Mailling Address\" name = \"maillingAdress\" label= \"Mailling Address\"/>\r\n                        <CustomTextInput  placeholder=\"Eamil\" name = \"email\" label= \"Email\"/>\r\n                        <CustomTextInput  placeholder=\"Phone Number with country code (+xxxxxxxx)\" name = \"phoneNumber\" label=\"Phone Number\"/>\r\n                        <CustomTextInput placeholder=\"Citizenship Status\" name = \"citizenshipStatus\" label= \"Citizenship Status\"/>\r\n                        <CustomDateInput placeholderText = \"Employment start date\" dateFormat=\"dd-MM-yyyy\"  name = \"employmentStartDate\" />                            \r\n                        <CustomSelectInput options={employmentType} placeholder=\"Employement Type\" name = \"employmentType\" label=\"Employment Type\"/>\r\n                        <CustomTextInput placeholder=\"Position\" name = \"position\" label=\"Position\"/>\r\n                        \r\n                         <Header size=\"huge\" content = \"Emergency contact details\" sub color=\"teal\"/>\r\n                        <CustomTextInput placeholder=\"Emergency Contact Name\" name = \"emergencyContactName\" label=\"Name\"/>\r\n                        <CustomTextInput placeholder=\"Relationship\" name = \"emergencyContactRelationship\" label=\"Relation\"/>\r\n                        <CustomTextInput placeholder=\"Phone Number with country code (+xxxxxxxx)\" name = \"emergencyConteactPhoneNUmber\" label = \"Contact Number\"/>\r\n\r\n                        <CustomCheckBox placeholder=\"Is Signed\" name = \"isSigned\" type=\"checkbox\"  label= \"(Terms and Condition)\"/>\r\n\r\n                        <Button\r\n                            disabled = {isSubmitting ||!dirty ||!isValid}\r\n                            loading={isSubmitting} floated=\"right\"\r\n                            positive type='submit' content= \"Submit\"\r\n                        />\r\n                       \r\n\r\n\r\n                    </Form>\r\n                )}\r\n\r\n\r\n            </Formik>\r\n\r\n        </Segment>\r\n    )\r\n})","import { observer } from 'mobx-react-lite';\r\nimport { Container, Header, Segment } from 'semantic-ui-react';\r\nimport { useStore } from '../../app/stores/store';\r\n\r\nexport default observer(function ServerError() {\r\n    const {commonStore} = useStore();\r\n\r\n    return (\r\n        <Container>\r\n            <Header as='h1' content='Server Error' />\r\n            <Header sub as='h5' color='red' content={commonStore.error?.message} />\r\n            {commonStore.error?.details &&\r\n                <Segment>\r\n                    <Header as='h4' content='Stack trace' color='teal' />\r\n                    <code style={{marginTop: '10px'}}>{commonStore.error.details}</code>\r\n                </Segment>\r\n                \r\n            }\r\n        </Container>\r\n    )\r\n})","import React from 'react';\r\nimport { Message } from 'semantic-ui-react';\r\n\r\ninterface Props {\r\n    errors: any;\r\n}\r\n\r\nexport default function ValidationErrors({errors}: Props) {\r\n    return (\r\n        <Message error>\r\n            {errors && (\r\n                <Message.List>\r\n                    {errors.map((err: any, i: any) => (\r\n                        <Message.Item key={i}>{err}</Message.Item>\r\n                    ))}\r\n                </Message.List>\r\n            )}\r\n        </Message>\r\n    )\r\n}","import { useState } from 'react';\r\nimport {Button, Header, Segment} from \"semantic-ui-react\";\r\nimport axios from 'axios';\r\nimport ValidationErrors from './ValidationErrors';\r\nimport { store } from '../../app/stores/store';\r\nimport ServerError from './ServerError';\r\nimport { observer } from 'mobx-react-lite';\r\n\r\n\r\nexport default observer( function TestErrors() {\r\n    const baseUrl =  process.env.REACT_APP_API_URL;\r\n    const [errors, setErrors] = useState(null);\r\n\r\n    function handleNotFounds() {\r\n        axios.get(baseUrl + '/buggy/not-found').catch(err => console.log(err.response));\r\n    }\r\n\r\n    function handleBadRequest() {\r\n        axios.get(baseUrl + '/buggy/bad-request').catch(err =>console.log(err.response));\r\n    }\r\n\r\n    function handleServerError() {\r\n        axios.get(baseUrl + '/buggy/server-error').catch(err => console.log(err.response));\r\n    }\r\n\r\n    function handleUnauthorised() {\r\n        axios.get(baseUrl + '/buggy/unauthorised').catch(err => console.log(err.response));\r\n    }\r\n\r\n    function handleBadGuid() {\r\n        axios.get(baseUrl + '/employee/notaguid').catch(err => console.log(err));\r\n    }\r\n\r\n    function handleValidationError() {\r\n        axios.post(baseUrl + '/employee', {}).catch((err) => setErrors(err));\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Header as='h1' content='Test Error component'  />\r\n            <Segment>\r\n                <div className='button-group'>\r\n                    <Button onClick={handleBadRequest} content='Bad Request' basic primary />\r\n                    <Button onClick={handleValidationError} content='Validation Error' basic primary />\r\n                    <Button onClick={handleNotFounds} content='Not Found' basic primary />\r\n\r\n                    <Button onClick={handleServerError} content='Server Error' basic primary />\r\n                    <Button onClick={handleUnauthorised} content='Unauthorised' basic primary />\r\n                    <Button onClick={handleBadGuid} content='Bad Guid' basic primary />\r\n                </div>\r\n            </Segment>\r\n            {errors &&\r\n                <ValidationErrors errors={errors} />\r\n            }\r\n\r\n            {store.commonStore.error && <ServerError/>}\r\n        </>\r\n    )\r\n})","import * as React from 'react';\r\nimport { Container, Icon, Segment } from 'semantic-ui-react';\r\n\r\nexport default function Home(){\r\n    return(\r\n        <Segment  textAlign='center' vertical className='welcome-header'>\r\n            <Container text>\r\n                <Icon name='signup'></Icon>\r\n                <h1>Welcome!</h1>\r\n                <h2>Secured Signing Candidate Evalution</h2>\r\n            </Container>\r\n        </Segment>\r\n    )\r\n}","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Modal } from 'semantic-ui-react';\r\nimport { useStore } from '../stores/store';\r\n\r\n\r\nexport default observer(function ModalContainer() {\r\n    const {modalStore} = useStore();\r\n\r\n    return (\r\n        <Modal open={modalStore.modal.open} onClose={modalStore.closeModal} size='small'>\r\n            <Modal.Content>\r\n                {modalStore.modal.body}\r\n            </Modal.Content>\r\n        </Modal>\r\n    )\r\n})","import { NavLink, useHistory } from 'react-router-dom';\r\nimport { List } from 'semantic-ui-react';\r\n\r\ninterface Props{\r\n hideMenuOption?:()=> void\r\n}\r\n\r\nexport default function NavOptions({hideMenuOption}:Props){\r\n    const history = useHistory();\r\n    function reload(){\r\n        history.push('/create');\r\n        window.location.reload();\r\n    }\r\n    return (\r\n        <List size= \"large\" link>\r\n            <List.Item as ={NavLink} to = {'/'}  onClick={hideMenuOption} >Home</List.Item>\r\n            <List.Item as ={NavLink} to = {'/employees'} onClick={hideMenuOption} >Employee</List.Item>\r\n          \r\n            <List.Item as ={NavLink} to = {'/create'} onClick={reload} >Create Employee</List.Item>\r\n            <List.Item as ={NavLink} to = {'/about'} onClick={hideMenuOption} >About</List.Item>\r\n            <List.Item as ={NavLink} to = {'/errors'} onClick={hideMenuOption} >Test Errors</List.Item>\r\n            \r\n        </List>\r\n    )\r\n}","import * as React from 'react';\r\nimport { Container, Menu } from 'semantic-ui-react';\r\nimport NavOptions from './NavOptions';\r\n\r\nexport default function DestopNav(){\r\n    return(\r\n       <Menu fixed='top' id=\"desktop-nav\">\r\n                <Container className = \"desktop-nav-expand\">\r\n                    <NavOptions/>\r\n                </Container>\r\n            </Menu>\r\n    )\r\n}","import { observer } from 'mobx-react-lite';\r\nimport { Container, Menu } from 'semantic-ui-react';\r\nimport { useStore } from '../../stores/store';\r\nimport NavOptions from './NavOptions';\r\n\r\nexport default observer( function MobileNav(){\r\n    \r\n    const {employeeStore}= useStore();\r\n    return (\r\n        <div id=\"mobile-nav\"> \r\n            <Menu fixed='top' >\r\n                <Container>\r\n                    <Menu.Item as =\"h2\" onClick={()=> employeeStore.toggleMenuOption()}>\r\n                        <i className=\"bars icon\" ></i>\r\n                    </Menu.Item>\r\n                </Container>\r\n            </Menu>\r\n            {\r\n              employeeStore.isMenuvisible && ( <Container  className= \"mobile-nav-expand\">\r\n                    <NavOptions hideMenuOption={employeeStore.toggleMenuOption}></NavOptions>\r\n                </Container>)\r\n            }\r\n          \r\n        </div>\r\n         \r\n    )\r\n})","import * as React from 'react';\r\nimport DestopNav from './DesktopNav';\r\nimport MobileNav from './MobileNav';\r\n\r\nexport default function Navbar(){\r\n    return(\r\n        <>\r\n           <MobileNav/>\r\n            <DestopNav/>\r\n        </>\r\n    );\r\n}","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { ToastContainer } from 'react-toastify';\nimport { Container } from 'semantic-ui-react';\nimport About from '../../features/about/About';\nimport EmployeeDetailComponent from '../../features/employee/employeeDetails/EmployeeDetailComponent';\nimport EmployeeListMain from '../../features/employee/employeeList/EmployeeListMain';\nimport EmployeeForm from '../../features/employee/form/EmployeeForm';\nimport NotFound from '../../features/errors/NotFound';\nimport ServerError from '../../features/errors/ServerError';\nimport TestErrors from '../../features/errors/TestError';\nimport Home from '../../features/home/Home';\nimport ModalContainer from '../common/modalContainer';\nimport Navbar from './navbar/Navbar';\nimport './style.css';\n\nfunction App() {\n  return (\n    <>\n    <ToastContainer position='bottom-right' hideProgressBar/>\n    <ModalContainer/>\n    <Navbar></Navbar>\n      <Container  style={{marginTop:'7em'}} >\n          <Route exact path='/' component={Home}/>\n          <Switch>\n              <Route exact path='/employees' component={EmployeeListMain} />\n              <Route  path='/create' component={EmployeeForm} />\n              <Route  path='/edit/:id' component={EmployeeForm} />\n              <Route  path='/details/:id' component={EmployeeDetailComponent} />\n              <Route  path='/about' component={About} />\n              <Route  path ='/errors' component={TestErrors} />\n              <Route  path ='/server-error' component={ServerError} />\n              <Route path='/not-found' component={NotFound}/>\n          </Switch>\n           \n            \n      </Container>\n    </>\n    \n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport './app/layout/style.css';\nimport 'react-toastify/dist/ReactToastify.min.css';\nimport App from './app/layout/App';\nimport reportWebVitals from './reportWebVitals';\nimport {createBrowserHistory} from 'history';\nimport { store, StoreContext } from './app/stores/store';\nimport { BrowserRouter } from 'react-router-dom';\n\nexport const history = createBrowserHistory();\nReactDOM.render(\n  <StoreContext.Provider value = {store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </StoreContext.Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}